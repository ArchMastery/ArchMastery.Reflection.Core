name: .NET

on:
  release:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      event_name: ${{ github.event_name }}
      configuration: ${{ if(github.event_name == 'release') { 'Release' } else { 'Debug' } }}

    steps:
    - name: Checkout
      uses: actions/checkout@v1
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
        
    - name: GitHub Action to Setup GitVersion
      uses: sharpninja/setup-gitversion@master
      with:
        run-gitversion: true
        gitversion-version: 5.10.3
        run-gitversion-args: '{ "cwd": "${{ github.workspace }}" }'
        
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      shell: pwsh
      run: dotnet build -c ${env:configuration} --no-restore 
    - name: Tests
      shell: pwsh
      run: dotnet test -c ${env:configuration} --no-build
    - name: Publish
      shell: pwsh
      if: ${{ env.configuration == 'Release' }}
      run: | 
        dotnet pack -c Release --no-build --include-symbols --include-source
        $packages = gci *.symbols.nupkg -Recurse -ErrorAction Stop

        echo "Length: ${packages.Length}"
        
        $packages | forEach-Object -process {
          $path = $_.FullName;
          echo "FullName: [$path]"
          echo "dotnet nuget push $path -k `"${{ secrets.NUGET_TOKEN }}`" -s `"https://api.nuget.org/v3/index.json`" --skip-duplicate"
          $result = dotnet nuget push $path -k "${{ secrets.NUGET_TOKEN }}" -s "https://api.nuget.org/v3/index.json" --skip-duplicate
          if($LASTEXITCODE -ne 0) { throw $result }
          echo $result
        }
